import requests.exceptions
from typing import Any

class AuthError(RuntimeError): ...
class LoginFailed(AuthError): ...
class LoginRequired(AuthError): ...
class UnboundEntity(RuntimeError): ...
class Fault(requests.exceptions.HTTPError): ...
class ObjectNotFound(Fault): ...
class AccessUnauthorized(Fault): ...

class RateLimitExceeded(RuntimeError):
    limit: Any
    timeout: Any
    def __init__(self, msg, timeout: Any | None = ..., limit: Any | None = ...) -> None: ...

class RateLimitTimeout(RateLimitExceeded): ...
class ActivityUploadFailed(RuntimeError): ...
class ErrorProcessingActivity(ActivityUploadFailed): ...
class CreatedActivityDeleted(ActivityUploadFailed): ...
class TimeoutExceeded(RuntimeError): ...
class NotAuthenticatedAthlete(AuthError): ...
