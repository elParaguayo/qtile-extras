from typing import Any, NamedTuple
from weakref import WeakValueDictionary as WeakValueDictionary

META: int
SUMMARY: int
DETAILED: int

class Attribute:
    log: Any
    resource_states: Any
    data: Any
    units: Any
    def __init__(self, type_, resource_states: Any | None = ..., units: Any | None = ...) -> None: ...
    def __get__(self, obj, clazz): ...
    def __set__(self, obj, val) -> None: ...
    @property
    def type(self): ...
    @type.setter
    def type(self, v) -> None: ...
    def marshal(self, v): ...
    def unmarshal(self, v): ...

class DateAttribute(Attribute):
    def __init__(self, resource_states: Any | None = ...) -> None: ...
    def marshal(self, v): ...
    def unmarshal(self, v): ...

class TimestampAttribute(Attribute):
    tzinfo: Any
    def __init__(self, resource_states: Any | None = ..., tzinfo=...) -> None: ...
    def marshal(self, v): ...
    def unmarshal(self, v): ...

class LatLon(NamedTuple):
    lat: Any
    lon: Any

class LocationAttribute(Attribute):
    def __init__(self, resource_states: Any | None = ...) -> None: ...
    def marshal(self, v): ...
    def unmarshal(self, v): ...

class TimezoneAttribute(Attribute):
    def __init__(self, resource_states: Any | None = ...) -> None: ...
    def unmarshal(self, v): ...
    def marshal(self, v): ...

class TimeIntervalAttribute(Attribute):
    def __init__(self, resource_states: Any | None = ...) -> None: ...
    def unmarshal(self, v): ...
    def marshal(self, v): ...

class ChoicesAttribute(Attribute):
    choices: Any
    def __init__(self, *args, **kwargs) -> None: ...
    def marshal(self, v): ...
    def unmarshal(self, v): ...

class EntityAttribute(Attribute):
    bind_clients: Any
    def __init__(self, *args, **kwargs) -> None: ...
    @property
    def type(self): ...
    @type.setter
    def type(self, v) -> None: ...
    def __set__(self, obj, val) -> None: ...
    def marshal(self, v): ...
    def unmarshal(self, value, bind_client: Any | None = ...): ...

class EntityCollection(EntityAttribute):
    def marshal(self, values): ...
    def unmarshal(self, values, bind_client: Any | None = ...): ...
