from typing import Any
from units.abstract import AbstractUnit as AbstractUnit
from units.composed_unit import ComposedUnit as ComposedUnit
from units.registry import REGISTRY as REGISTRY

class LeafUnit(AbstractUnit):
    def get_specifier(self): ...
    specifier: Any
    def __new__(cls, specifier, is_si): ...
    def __init__(self, specifier, is_si) -> None: ...
    def __reduce__(self): ...
    def str_includes_multiplier(self): ...
    def __lt__(self, other): ...
    def __mul__(self, other): ...
    def __truediv__(self, other): ...
    __div__: Any
    def invert(self): ...
    def canonical(self): ...
    def squeeze(self): ...
    def __pow__(self, exponent): ...
