[build-system]
requires = [
    "setuptools>=60",
    "setuptools-scm>=7.0",
    "wheel",
]
build-backend = "setuptools.build_meta"

[tool.setuptools-git-versioning]
enabled = true

[project]
name = "qtile-extras"
authors = [
    {name="elParaguayo"}
]
license = "MIT"
license-files = [ "LICENSE" ]
description = "Extra items for qtile that are unlikely to be maintained in the main repo."
dynamic = ["version"]
requires-python = ">=3.12"
readme = "README.md"

[project.urls]
homepage = "https://github.com/elParaguayo/qtile-extras"
documentation = "https://qtile-extras.readthedocs.io/en/stable/"
changelog = "https://qtile-extras.readthedocs.io/en/stable/changelog.html"
issues = "https://github.com/elParaguayo/qtile-extras/issues"

[tool.setuptools.packages.find]
exclude = ["test*", "docs*", "stubs*"]

[tool.ruff]
line-length = 98
target-version = "py310"

[tool.ruff.lint]
select = [
	"F",       # pyflakes
	"E",       # pycodestyle errors
	"W",       # pycodestyle warnings
	"I",       # isort
	"N",       # pep8-naming
	"G",       # flake8-logging-format
	"PIE",     # flake8-pie
	"UP",      # pyupgrade
]

ignore = [
    "E501",    # ignore due to conflict with formatter
    "N818",    # exceptions don't need the Error suffix
    "E741",    # allow ambiguous variable names
]

fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"stubs/*" = [
    "N",       # naming conventions don't matter in stubs
    "F403",    # star imports are okay in stubs
    "F405",    # star imports are okay in stubs
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["qtile_extras", "test"]
default-section = "third-party"

[tool.setuptools_scm]

[tool.vulture]
paths = ["qtile_extras", "whitelist.py"]
min_confidence = 100
ignore_decorators = ["@method"]

[tool.coverage.run]
branch = true
source = ["."]

[tool.coverage.report]
show_missing = true
skip_covered = true
omit = [
    "test/*",
]

[project.optional-dependencies]
dev = [
    "coverage",
    "coveralls",
    "pytest-cov",
    "pre-commit",
    "PyGObject",
    "isort",
    "pytest < 8.0.0",
    "mypy",
    "anyio",
    "check-manifest",
    "twine",
    "build",
    "pytest-rerunfailures",
    "pytest-lazy-fixture",
    "setuptools >= 40.5.0",
    "xkbcommon < 1.1",
    "pywayland == 0.4.17",
    "dbus-fast",
    "xcffib >= 1.4.0",
    "cairocffi >= 1.6.0",
    "wheel"
]
widgets = [
    "requests",
    "pint",
    "stravalib <= 1.1.0",
    "iwlib",
    "psutil",
    "pulsectl-asyncio",
]
